#+title: Голое железо (эссе об Emacs)
#+date: 2025-08-01
#+language: ru

/01 августа 2025/

Перед вами — зарисовка для «карнавала блогов Emacs» Джереми Фризена, на сей раз посвящённого теме «лифтовой речи». Отрывок этот вынут из недописанной рукописи, что таскается за мной долгие годы под условным наименованием «Волнующая паника!». Взялся я за него где-то на излёте 2022. Бесконечно вынашивать нельзя.

Эта книга — о магии и прочих антирациональных верованиях, упрямо не желающих уживаться с рассудком.

Если требуете от меня предельно сжатую «лифтовую речь» о Emacs — вот она: «Это свободный редактор текста с открытым кодом, где ты можешь переиначить даже самые основы, правя его изнутри прямо во время работы. Поначалу куда более заморочен, чем VS Code и прочая братия, но если пустишь в себя его логику и кривизну, вряд ли сыщешь на свете мощнее программу для смертного пользователя. К тому же — это по-настоящему великолепный текстовый редактор, как ни странно». Примите это за мой стеклянный лифт.

Глава — слов на одиннадцать тысяч, хватит на целую одиссею — размах её широк; толкнул же меня опубликовать этот кусок именно Джереми: не год, не два живу под светом его заметок про OSR, и попадаются здесь строки, что прямо бегут навстречу нашему недетскому общему увлечению.

Спасибо за ваше чтение и — Джереми за площадку для искушённых.

#+begin_quote
За четверть века допёрли мы вот до чего — доступа к инструментам и идеям мало. Руки и мудрость оттачиваются не столько теорией, сколько упражнением; опыт делает мастера, придаёт делу особую чуткость. Вот почему сменили мы девиз: с прежнего «доступ к инструментам и идеям» — на «доступ к идеям, инструментам и практикам». (Whole Earth, №90, лето 1997)

Где-то к 1995 всё стало предельно ясно — этот год вообще «год Интернета», не зря его поминаю, — начали мы катиться к тому, что нынче называю технопатократией, «властью больных машин», проще говоря — деньгами. (Питер Лэмборн Уилсон)

Вселенная выдыхается, так уж сшито её нутро. (Джон М. Форд, «Против энтропии»)
#+end_quote

* В дебри

Вступив сорока, я обдуманно взялся за несколько рослых, как дубы, проектов: хотел овладеть горсткой инструментов и текстов, что всю жизнь манили меня на краю поля зрения, навязчиво — требуя не поверхностного знакомства, а вдумчивого, преданного ученичества. И все они — так чудесно работает ассоциация — оказались в этой самой книге.

Я, надо сказать, тяготею к чистому тексту — люблю писать в строках без прикрас, в редакторах, чьи клавиши годятся не только для черновиков, а и для кода. Первые годы весь этот замысел плёлся в Sublime Text: редактор для программ, но, признаться, и прозу порой позволяет писать по-настоящему без шумов и уведомлений. Некоторые сугубо редакторские привычки — скажем, слово «строка» — в литературе чувствуются чужеродно: привыкши к абзацам, длинным, переливчатым, как Волга, нечего тебе ловить в мире коротышек. Программистские редакторы сторонятся пишущие на русском и английском в основном: тянет их, как магнитом, к родному, к Microsoft Word. Но у каждого свой путь, не всех стоит уговаривать на переправу.

Десять лет я верой и правдой служил Sublime, да с годами шаг его замедлился: программа стареет быстрей людей; скоро ей уж на покой, а мне переучиваться на новые странности — дело не для слабого духом. Учиться этому в сорок три непросто, а в пятьдесят три — и вовсе пугающе. К чёрту.

Недолго — но всё же — покрутил я роман с vim.

Vim — воистину незаурядное явление, «модальный» редактор, где привычки повисают в воздухе, и старые рефлексы обесценены: его ~Normal~-состояние встречает нажатие клавиш не буквами, а действиями — ~hjkl~ ведут туда-сюда по строчкам и столбцам, ~x~ вырезает, ~X~ стирает, ~/~ зовёт поиск; чтобы вернуться к рождению мысли, надо ударить ~i~ (или ~a~, по желанию), и только тогда редактор пустит тебя обратно в режим Ввода — ~Insert~. В обычном редакторе ты творишь текст, правка вторична, требует наскока и обходных путей; в vim — правка становится делом первого сорта. Чудо в том, что команды сплетаются: ~d$~ отправляет строку в небытие от курсора до конца; ~di)~ выедает содержимое из скобок, ~da)~ — и их самих вместе.

Такой подход не по сердцу тем, кто лихо щёлкает эссе в MS Word — не задерживаясь на правке и раздумьях, а гонит свои мысли, не сбавляя хода. Для же тех, кто дружит с логикой и структурой, — программистам, вычислительным уму, — всё это кажется не только оправданным, но и почти родным телу.2 На истинных гуру vim страшно смотреть!

Увы, не моё — не по мне этот монастырский уклад. Почувствовав капельку самоиронии (а может быть, пустив в кровь старый католический яд), вернулся к тем инструментам, что служили мне добрую службу на рубеже девяностых: Emacs — дивный, раздвигаемый, как Вселенная, настраиваемый, да ещё и сам себя сплошь разъясняющий редактор.

* Биографическое уточнение

В следующих 10 000 словах мы будем называть хакера и основателя Free Software Foundation Ричарда Столлмана создателем Emacs. Столлман был заметной фигурой контркультуры вычислений 70‑х, и о его сложном влиянии на движение свободного/открытого ПО 90‑х можно сказать многое.

Столлман был не единственным создателем Emacs, но по роли в его развитии он, в некотором смысле, им стал. Жизнь такая. В духе культуры MIT AI Lab того времени в «?MACS» участвовала горстка разработчиков, которые сначала расширили, а затем превзошли древний редактор TECO; в AI Lab «rms» считался «первым среди равных» в этой когорте программистов и мог в 1976 году переименовать ?MACS в «Emacs» с согласия соавтора Гая Стилла («gls»), который позже вместе с Джеральдом Сассманом создал язык Scheme. Джеймс Гослинг, впоследствии автор Java, написал версию Emacs в начале 80‑х, которую Столлман почти полностью переписал и выпустил, согласно своим строгим формализованным этическим принципам, как GNU Emacs в 1985 году. Как писал Стилл в 2007‑м:

#+begin_quote
RMS всё равно заслуживает 99% или 99.9% или 99.99% или 99.999% заслуг за то, что взял пакет макросов TECO и превратил его в самый мощный редактор на планете дважды (сначала в TECO, а затем на ELISP) … Не думаю, что RMS есть причины отрицать должную долю заслуг у людей, которые помогали ему в первые месяцы. Они отдавали своё время и творческие силы бесплатно, в лучшем духе вклада в сообщество.
#+end_quote

Из более полного изложения этой истории можно извлечь важные уроки: о коллективно‑творческом вдохновении и «сценичности» по Брайану Ино; о том, как управлять взаимодействием личной гордости собственника и публичного принципа; как строить и поддерживать «намеренное интеллектуальное сообщество», когда вокруг навалом денег; о сложных способах, которыми аутизм и проблемы исполнительных функций сформировали раннюю «гиковскую» культуру и как мейнстрим к ней отнёсся (монетизировал/уничижал) эти когнитивные особенности. Позднейшая история Столлмана, включая недавний скандал, из‑за которого его на время отлучили от движения свободного ПО, — важный кейс. Но не здесь.

* YAFIYGI [fn:1]

[fn:1] Acronym for "You Asked For It, You Got It". Добавить более подробное пояснение в сноски.

У Emacs репутация медленного, корявого, древнего, непостижимого, излишне сложного, эргономически катастрофического и просто уродливого. Ничего из этого не правда, но понятно, почему так кажется:

- Новички в Emacs делают всё медленно, потому что им непривычно и внешне он аскетичен, т. е. «опорных лесов» для новичков нет
- Его текстовая суровость и непонятный частный жаргон («kill» вместо «cut»? «window» — это не окно?) создают впечатление древнего софта, хотя он постоянно шлифуется
- Последовательности клавиш[fn:3] — напр. ~C‑c C‑a f~, ~C‑x C‑f~ для открытия файла — и непривычны, и громоздки, чуть слишком сложны для частого использования, будто написаны под инопланетные клавиатуры[fn:4] (и руки); эргономика даже базовых команд Emacs кажется безумной, а обнаруживаемость[fn:5] — кошмар
- Элементы UI на обычном языке в Emacs странно другие; все его частные идиомы выглядят сложнее или просто извращённо произвольными по сравнению с консенсусным языком коммерческого ПО. Разделите окно («фрейм» — окно ОС, далее просто фрейм) пополам (т. е. на два «окна» — «window» Emacs) и «убейте» (закройте, kill) одно — и оба исчезнут по вполне логичным причинам, которые для непосвящённых смысла не имеют[fn:6]
- А для современного глаза визуал Emacs — от стены ASCII в терминале до нелепых вкладок — выглядит некрасиво, а это поднимается от вопроса вкуса до религии у тех, кто под «утончённостью» понимает причёсанный вид и правильные слова, а не работу

Короче говоря, как Дрю Бэрримор, Emacs примерно 50 лет, и он так и выглядит, а пользователи, пришедшие из современного коммерческого софта, — как городские жильцы, которых заставили вытащить микроволновки из розеток и вспомнить про огонь. Микроволновки делают сложное проще, медленное быстрее, плохое терпимее, но без других инструментов они не приготовят хороший обед; к тому же, когда поднимется море и погаснет свет, микроволновка будет бесполезна — разве что домиком для мелких питомцев. Огонь остаётся.

#+begin_quote
Огня не имея, не властвовать.
#+end_quote

И всё же я не пытаюсь «продать» вам Emacs. Как и Столлман, и сам редактор, мы имеем в виду другое.

* Воплощённая философия

Пользоваться Emacs — значит взаимодействовать с системой, не похожей ни на одно сопоставимое по возможностям ПО: построенной вокруг интроспекции — самонаблюдения, когда редактор раскрывает и редактирует собственный код, — и беспрецедентной расширяемости. Представьте: вы сохраняете документ, а затем набираете букву s. В Emacs, как и в MS Word или почти где угодно, вы жмёте сочетание «сохранить» (здесь ~C‑x C‑s~), документ пишется на диск, и потом вы набираете s — и на экране появляется буква «s», легко, как дышать. Почти ни в какой программе нельзя перенастроить это поведение — программа принимает Ctrl-S или Cmd-S как команду «Сохранить», а «s» значит «s». Нажали — получили букву. Таков контракт.

В Emacs, когда вы жмёте ~C‑x C‑s~, вызывается функция ~save-buffer~ — компактная процедура на языке Emacs Lisp, исходник которой можно найти в файле ~files.el~:

#+begin_src elisp
(defun save-buffer (&optional arg)
 (interactive "p")
  (let ((modp (buffer-modified-p))
    (make-backup-files (or (and make-backup-files (not (eq arg 0)))
                   (memq arg '(16 64)))))
    (and modp (memq arg '(16 64)) (setq buffer-backed-up nil))

    (if (and modp
             (buffer-file-name)
             (not noninteractive)
             (not save-silently))
    (message "Saving file %s..." (buffer-file-name)))
    (basic-save-buffer (called-interactively-p 'any))
    (and modp (memq arg '(4 64)) (setq buffer-backed-up nil))))

(Обширная «самодокументация» функции опущена ради краткости; ~docstring~, отличающийся от комментариев в исходнике, — одна из ранних важных инноваций Emacs.)
    
Причина, по которой это эссе столь чёртовски настойчиво в защите древнего текстового редактора, такова: вы можете не только править приведённый код — что верно и для любого софта, который вы сами собираете, — но вы можете делать это прямо во время работы Emacs, например, с помощью механизма ~advice~: написав сколь угодно сложный код на Lisp, вы можете дополнять, перехватывать, оборачивать или даже заменять ~save-buffer~ своим вариантом, меняя поведение самого Emacs на лету. Если вы не чувствуете, почему это важно, представьте, что в телефоне вы могли бы переопределить, какие именно данные уходят в сеть при нажатии «Отправить» в мессенджере. Представьте, что в консоли Chrome вы могли бы переписать его гугловский слежебный код — или вырвать его с корнем…

Но возможности идут дальше: когда вы набираете s в такой вот фразе, обычную s, Emacs выполняет программу ~self-insert-command~. Да, короткую программу на Emacs Lisp — и да, вы можете править её на лету.
 Хотите, чтобы Emacs подменял буквы в зависимости от контекста (или времени суток), центрировал экран при каждом новом абзаце, ограничивал число восклицательных знаков в документе в процессе набора, логировал и строил график нажатий клавиш или навязывал перерывы по «Помидоро» переменной длины в зависимости от выполняемой задачи? Всё это возможно, потому что поддерживающие Emacs десятилетиями настаивали на таких возможностях — из философских соображений.

Этот доступ к внутренностям программы — больше, чем «настраиваемость», хотя это — один из лёгких продающих пунктов Emacs. Обычные разработчики решают, как их программы будут работать: определяют глаголы и объекты и базовую логику взаимодействия (UX), а вам, пользователю/потребителю, позволяют менять некоторые наречия — например, цвет экрана. (Не желаете ли свеженький «тёмный режим»? Наш Дизайн-комитет подобрал прекрасную палитру…) Ричард Столлман и его сопроектировщики создали и поддерживали — ценой бешеных затрат времени и нервов — систему, в которой пользователь может запускать сколь угодно сложные программы поверх буферно‑оконной системы Emacs, подбирая свои, чёрт подери, глаголы и определяя работу программы до самого нижнего практического уровня.[fn:7]

Есть старая шутка: «Emacs — отличная операционная система, которой не хватает только приличного текстового редактора». Пойдём дальше, в другом направлении. Emacs — это труд воплощённой философии: способ жить свободно (не хватает только приличного текстового редактора).

Его установки — намеренные и фундаментальные: Emacs — свободный проект под эгидой Free Software Foundation Ричарда Столлмана, организации, посвящённой радикальному тезису: скачав программу, вы должны иметь возможность делать с ней всё, на что способны. Иначе говоря: вы обязаны владеть и контролировать свои данные и своё ПО, а оно никоим образом не должно контролировать вас. Free — и как «пиво», и как «слово» (free as in beer, free as in speech). Способы, которыми Фонд проводит свои принципы, могут показаться драконовскими: например, чтобы внести код в ядро Emacs, вы должны явно (и хлопотно) отказаться от «прав интеллектуальной собственности». Ну, делать правильно — долго.

Emacs артикулирует философию свободы, согласно которой человек не по‑настоящему свободен, если у него нет полной приватности и полного контроля над своими инструментами. Поэтому Emacs прозрачен для изучения и интроспекции до самого голого железа — до нижнего уровня C‑кода. Несмотря на сложность инструмента и среды вычисления, от пользователя ничего не утаивается. Программа специально построена, чтобы обеспечивать такую интроспекцию; она предназначена не столько для редактирования текста — в чём хороша, — сколько для предоставления (воплощения) контроля над вычислением, прямо противоположного современным «огороженным садам». (Попробуйте достать сторонние запчасти для своей Tesla.) Эта установка жизненно важна и крайне необычна в нашу эпоху, когда и аппаратные хакеры, и позёры носят футболки «I VIOLATE WARRANTIES» как знак гордого несогласия. Но она полностью в духе 70‑х — движения за освободительные персональные вычисления, за создание и распространение инструментов для роста человеческого здоровья и возможностей, а не для выжимания из нас рекламных денег. (Силиконовая долина просто отказалась от этого этоса, что одна из причин, почему создатель Emacs Столлман вызывает насмешки позёров.)

Вы можете сыграть в «Тетрис» в буфере Emacs, потому что возможное — дозволено; и да, по какой‑то дурацкой причине «Тетрис» встроен. 
(Попробуйте ~M‑x tetris~.)[fn:8]

Мы говорим о сложной программной системе — по сути рантайме Lisp, то есть программе для запуска других программ — у которой мощный редактор текста — главный, но не единственный смысл.

#+begin_quote
Я вижу Emacs по сути двумя вещами: программируемым рантаймом и маяком свободного ПО. (Мурило Перейра)
#+end_quote
Задача программы — дать, обеспечить эмансипирующий опыт автономных вычислений. Сознание — это то, что делают тела, а инструменты расширяют связку «тело‑ум»: контроль над инструментами[fn:9] — это свобода.

Даже если вы не считаете вычисление разновидностью «внешней не‑нейронной когнитивной деятельности» — а уж тем более если считаете, — Emacs можно понимать как уникальный инструмент свободного мышления, то есть воображательного усилия, ограниченного только мастерством владения средствами и техниками, наделённого силой и не принуждаемого. Непроницаемый для непосвящённых, со своими сложными «заклинаниями», Emacs обнимает техники когнитивного преобразования, не сводящиеся к земной задаче «редактирования текстов». Вы не по‑настоящему пользуетесь программой, пока не начнёте думать, как она — после чего трудно представить, что вы будете пользоваться чем‑то другим, если только не вынудят, потому что прочий «подобный» софт скован более‑менее благонамеренными рамками заданности и продаёт часть свободы за мгновенную пользу, то есть меняет полноту на удовлетворение. Emacs таков по философским причинам, и, оставаясь верным своим (то есть ФСФ, то есть Столлмана) принципам, он умудряется одновременно артикулировать систему убеждений и быть, без шуток, мощным инструментом, которым приятно пользоваться и овладевать. Когда старые волки всерьёз заявляют, что Emacs — единственная программа, которая им нужна в рабочий день, они имеют в виду, что это целая система (по сути «операционная система»), под сенью которой можно выполнять и прочую деятельность. Способ бытия.

Программист/ворчун Стив Йегги как‑то описал Emacs как

#+begin_quote
нечто среднее между Блокнотом Windows, операционкой с монолитным
ядром и Международной космической станцией… (Стив Йегги)
#+end_quote

…но другой сорт зануды, пожалуй, вспомнил бы не МКС, а замок Горменгаст — строение‑мир, инверсный дворец памяти, где метод loci не только запоминает, но и производит гротескную странность. Накапливается десятилетиями, едва держась как угасающая империя (или как орбитальная лаборатория), будто автокаталитичен, способен порождать внутри новые странные реальности. Бесконечен и едва самосодержащ.

(Мне вспоминается «Эджвуд» Джона Краули, мир «Пиранези» Сюзанны Кларк, дом Навидсонов — или LambdaMOO и его объект №17, Гостиная.)

И теперь, если вы с нами на протяжении «настоящей работы», вы снова должны подумать о «магии» — в частности, о магии как воображаемой (анти)системе. С акцентом на самоопределении, само‑перекройке, интроспекции и «любви под волей» вполне естественно рассматривать Emacs как разновидность магической системы — целую альтернативную область, требующую труда для осмысления, — и, однажды осмысленная, способную породить что угодно. Им можно править текстовые файлы, даже на человеческих языках,[fn:10] но это всё равно что «пользоваться магией», чтобы «сотворить приворот». Привороты — побочный продукт воображаемой трансформации мага; и если что вам нужно от магических изысканий — это чтобы кто‑то в вас влюбился, есть инструменты гораздо лучше, например внимательный живой разговор. Требуется много труда, чтобы Emacs «просто работал», но так и должно быть: изучение Emacs — как изучение Lisp или латыни, тантры или тарантеллы — само по себе не решает задач, а открывает новые способы их решения. (Скорее это мечта компьютерного учёного, чем прикладного инженера.) В Lisp нет «синтаксического сахара» — он ничего не прячет под собой, как лодка с прозрачным дном. На латыни уже не говорят, но почти все на Западе говорят на языках, к которым она открывает вход. Медитация не «сделает вас спокойным», но она может помочь понять, как обрести покой. Сила инструмента в том, что сильнее становитесь вы — более готовыми/способными взять подлинную ответственность за творчество, то есть более свободными.

Любое заклинание накладывается на заклинателя.

Магия «не работает», мы повторяем, — но она работает. Точнее: как только вы настроите свои dotfiles (сознание, магическую систему, набор инструментов) «как надо», вы сможете сделать всё, что изначально хотели, — но интереснее то, чего вам начнёт хотеться внутри этого, то, что вряд ли представит кто‑то hors-texte (даже если «вне текста» и есть).[fn:11] То, что становится возможным лишь в погружении, после (не)правильных инкантаций, открывающих нужное состояние. Вы отпускаете прежние желания и страх оценки — и обнаруживаете, что способны вообразить больше, чем знали. Отсюда различие между индустрией «персональных компьютеров» и движением «персональных вычислений»: первая — о покупке и использовании инструментов, второе — о трансформации и расширении «я» через их применение, о реализации человеческого потенциала… и как «побочный эффект» — о снижении тяги покупать дорогие потребтовары у обычных хищников. Почему, как думаете, Они убили это движение…?

* Текстомиры

#+begin_quote
Вот так он видит всё время, каждый день. Будто тут только мы, внутри, вместе. … И у нас только мы и есть. (Лекс Лютор)
#+end_quote
В 1995‑м я взял летний курс в Джонc Хопкинс под названием «Исследования текстовой виртуальной реальности» — о странных последствиях тогда ещё новых онлайновых «мульти‑юзерских подземелий/доменов» (MUD) — по сути многопользовательского Зорка в реальном времени. Набор чтения включал Скотта Букатмана, Марка Дери, «Нейроманта», «Виртуальное сообщество» Рейнгольда, «Изнасилование в киберпространстве» Диббелла. Вкупе с тем, что я читал тогда в свободное от пары время (Millennium Whole Earth Catalog, Principia Discordia, Revelation X, Usenet, ранняя Сеть) и с вызывавшим раннее половое созревание НФ‑скинфильмом «Особь» с канадской моделью/актрисой Наташей Хенстридж — это был опыт, изменивший жизнь.

В компьютерном классе JHU я узнал термин «multi‑user shared hallucination» («коллективная общая галлюцинация») или «MUSH»; изначально это было обозначение варианта MUD‑сервера, но в «настоящей работе» я употребляю его в разных контекстах, потому что — прямо скажем — он может описывать почти всё мне интересное, всё хорошее и клёвое. Хотя в курсе мы рассматривали прежде всего MOO (MUD Object‑Oriented), в те головокружительные дни Whole Earth ’Lectronic Link и «Декларации независимости киберпространства» Барлоу было логично воспринимать сам киберпространство — и глубоко странные культуры, самоорганизующиеся вокруг него — как одну и многие разновидности общей галлюцинации, распределённые техномагические эксперименты на границе виртуального пространства (внутреннего пространства/головного, не только сетевой подложки или словесной среды) и «мяса». Киберпространство было фантазией, ставшей действительностью — или, во всяком случае, сюр‑реальностью, напряжённым актом воображающей воли: сейчас это звучит глупо, но тогда смыслнее было говорить именно в таких терминах, насыщенных магическими возможностями, чем соглашаться на коммерческие или государственные предложения ограничить или присвоить эту границу‑песочницу для связанных умов. Конечно, эмансипаторные возможности раннего киберпространства сами были общей галлюцинацией, ср. также «шестидесятые» vs 1960‑е…

Любой акт коллективного рассказывания историй или фантастического созидания — партия в D&D или Nomic, магический ритуал, киберсекс, связь через доску Уиджи или таро, выдуманный диалог на форуме, политический митинг, импровизационная музыка или комедия — можно (нужно) мыслить как разновидность инкантации или волевого психотропизма: коллективная общая галлюцинация. В «настоящей работе» термин «storygames» применяется к некоторым оккультным практикам (напр. «чэннелинг» на доске уиджи у Джеймса Меррилла и Дэвида Джексона); здесь хочется подчеркнуть именно текстовую связь между такими технологиями — то, как разделённые миры, сделанные из слов, — точных и расплывчатых, индивидуальных и коллективных, формальных, лирических, музыкальных — похожи на магическую практику в том, как они деформируют восприятие и мышление вокруг фантастической реальности. Мемориальная словотворческая работа на расстоянии. Мы можем быть пересобраны из нереального вещества: помню, я расплакался, временно удалив своего персонажа на LambdaMOO где‑то в районе миллениума — актом набора команд для прыжка с воображаемой скалы у дома Лямбда; помнится, это было похожо на чью‑то смерть — не совсем «человека», но и не просто «аккаунт на чат‑сервере». Помню, как читал «Вирикониум» под Chip‑Meditation в лобби отеля Disney World, потом катался на «It’s a Small World» и думал — знал, — что мы провалились в историю, плывём через одушевлённые руины Вечерних Культур, и сам Харрисон (тегеус‑Кромис? или Великий Каир?) должен был проехать по тому же туннелю воображаемо, если не телесно; история, ещё не рассказанная, как‑то снова рассказывалась…

~keyboard-quit~ Чёрт, где это я? ~pop-to-mark-command~

В повседневном использовании Emacs есть качество призрачного лабиринта — звучит нелепо, но по‑честному оно так и ощущается — что связано мало с функцией программы и многое объясняет в её загадочной притягательности. Её культе. Причин полно: близость к древнему двигателю, непостижимые внутренне‑логичные движения руками для вызова команд, периодическое внезапное появление и исчезновение временных буферов, знание, что Emacs медленно обволок столько других программных систем («а что если мы сможем твитить прямо в редакторе? а если редактировать изображения?»), не теряя голода, аскетичный вид, сочетающийся с немыслимым богатством возможностей — чистая талассофобия — или, может, просто то, что Emacs в терминальном окне выглядит и ощущается, как «лабиринт из одинаковых извилистых ходов» из Zork. Отчасти это Emacs говорит на визуальном языке своего времени и места, невольно напоминая Zork (1977), Rogue (1980), MUD1 (1978). Издалека, спустя десятилетия, Emacs и прочие текстомиры обретают археофутуристическое качество — как увидеть иероглиф R2D2 на каменной стене гробницы Ковчега Завета. Читается как запись обо всём мыслимом в ином моменте, как «Греческие мифы» Грейвса — вариорум‑моделирование чужого ума: Emacs — виртуальная реальность. Точнее, текстовая VR; снова 1995, если я вообще оттуда уходил…

Язык команд LambdaMOO или Zork прост до неприличия — S, чтобы GO SOUTH, SAY ABC, чтобы сказать «ABC» слушателям — но как миф, глиф, «И‑цзин» или Lisp он намекает на скрытую имплицитную систему; это «миростроительство» инструментарного уровня, а не описательного или ссылочного — раскрытая структура аффордансов. Кто говорит «парсерзмеиным», мыслит мыслями парсера; парсер учит вас, как с ним говорить, что/как хотеть сказать, границам произносимого. Чертит дугу магического круга, сочетаемые ангельские руны. И вы стремитесь к настолько реальному опыту, насколько готовы — на какой глубине погружения. Ключевой шаг к мастерству — решиться испытывать эти границы, тестировать VR, пока не упрётесь в пузырь‑границу Трумана (границы фикции; четвёртую стену) — и, услышав полый голос Кристофа «ДУРАК», повернуть назад и на время снова стать историей — остаться частью магии, ставшей вашей, практики в новом знании. Учить новые правила, новый язык. (Субтайтл Zork III — «Dungeon Master», и угадайте, чью работу вы берёте на себя, когда выигрываете игру?)

#+begin_quote
Я покажу этим людям то, чего ты не хочешь, чтобы они видели. Я
покажу им мир без тебя… (Томас Андерсон)
#+end_quote

Мне нравится думать (должно быть так!) о «системном воображаемом» — игровой, искусной установке на парсинг и контроль динамики сложных систем, напр. в SimCity или, скажем, Nomic. Цель таких игр, я бы сказал, — «думать как система»: нащупать соответствие между вводом участника и откликом системы и применять его бегло, обитая в вынесенном когнитивном аппарате;12 может, яснее сказать: «чувствовать себя системой», соединиться с «вторым умом» в силиконе и ощущать поток информации как пульс, как хотение. Подумайте о «цеттелькастене», о симстим‑деках бритворукой Молли в «Нейроманте», как хакер Кейc (как и дьявол Смит в «Матрице») тащится от того, что занимает её тело… слёзы освобождения, когда Кейc вырывается из тюрьмы собственной плоти в абстрактный (бестелесный) ум матрицы у Гибсона или в заменитель сенсориума симстима. Мне хочется верить (и чем раньше, тем лучше!), что мы всё ещё говорим об Emacs. В симулятивной игре «заимствованный» ум‑тело нечеловеческий, и соматическое — даже эротическое — наслаждение в восшествии/восприятии чуждой мыслящей системы за пределами антрокатегорий. Мы узнаём эту логику блаженного диалогического подчинения в «мистическом разговоре» поэта Руми13 с его наставником Шамсом Тебризи — или (если вам ближе так) в том, как Пол Муад’Диб поглощает и вбирает свою предковую линию, мужскую и женскую, испив Воду Жизни. Молодые читатели, если такие есть: помните, как Люк говорит Рей «В тебе теперь живут тысячи поколений», и дальше она получает сверхсилы, но убивает своего парня на расстоянии и заканчивает фильм одна в пустыне среди призраков…? Психоделическое видение — антисистемный взгляд — делает вас странными, а это стоит. «Вот граница — и цена бессмертия».14

Работая на грани системы, уверенно на незнакомом языке — в зоне ближайшего развития — ощущаешь головокружение открытия и неизвестности за пределом привычной способности, щепотку ужаса под кожей; смелые не лишены страха, они смотрят ему в лицо. Прирождённая многозначность текста/слова создаёт забавную размытость у края текстомира. То же с лоу‑фай графикой, гулким звуком: чем менее точно медиум воспроизводит сообщение, тем больше ответственности на получателе за сотворение смысла — воображательное конструирование сообщения и стоящих за ним намерений: «сотворение» одновременно «узаконяет‑устанавливает» и «наполняет влагой». Вы сливаетесь с сообщением. Тайна в природе текста, в зазоре «медиум/месседж», и текстомиры — потому что они и есть и неизбежно не есть целиком на странице — всегда звучат/пахнут/видятся очень похоже на вас, Читатель(ей). Вы читаете тайну в бытие, в зазоры собственного восприятия и понимания; в интерактивном союзе с текстом (лексический «второй ум», внешняя система) вы затем переживаете эту тайну как конституирующую вас; всякий акт чтения или иной работы со словом опирается на надежду подобрать язык «достаточно правильно», не зная, что будет вызвано, если наложенные системы словоделания и смысла (явный и скрытый сон) чууууть не совпадут. Или совпадут. Вот странная мощь виртуальных мир‑слов: как они вцепляются в ваше воображение, вовлекают вас в сговор. Хотите вы того или нет.

Что такое группа без символов? Символы — вот размах.

Двадцать шесть букв, десять цифр, пригоршня завитков и черт, табуляция/слэш — из этого кривого дерева сделать мир? Порядок? Научить машину, что делать, как хотеть? Наложить чары? Телетайп? Рассказать историю?

M-x yank-pop?

Это качество — кидать монетки в темноту, чтобы понять, откинут ли их назад призраки; нащупывать набор тайных правил воображаемой трансформации, нажимать кнопки на заброшенном звездолёте вдруг вдруг, чтобы он запустился и, может, долетел до древнейшего света во Вселенной; крутить ручку радио как раз так — свойственно вчерашним виртуальностям. Новому миру руин требуется иное — «дружественная потребителю» переводимость/адаптируемость для внешних рынков или эквивалент. Режим обучения или проваливай, tl;dr. Нет рынков для тайны; нет времени для мечтаний — это принадлежало менее продуктивному старому миру.

Я ожидаю, что оно заработает «из коробки».

Я ожидаю нулевой задержки.

Я ожидаю отождествления с героем. Уверен, автор тоже.

Скажи мне, о чём будешь говорить, потом скажи, потом скажи, о чём сказал.

Проведи меня через самообучающиеся занятия.

Дааа, мне это нужно через час, спасибо.

…всё это — полная противоположность плодотворной неточности магии, как порнография — противоположность эротике, а «спойлер» — «истории» (удивлению). Как система — софт, текстомир — чья цель решать за вас (ради вашего же блага), какие вопросы можно задавать, какие проблемы можно/нужно решать, — противоположность системе, цель которой — дать вам свободу, не зная, к чему это приведёт, если вообще приведёт. Доверяет вас морю. Свиваться со странностью системы — это и есть смысл («сначала изучи работу ~kill-ring~»), как и возможность вплести свою маленькую жизнь в другого человека и вокруг него — зачем ещё любить. Союз с другим, узнавание, резонанс, регуляция, ревизия.15 Значимая автономия — чудовищна, как сказал чьей‑то брат или другой — даже более чудовищна, чем печатать C-x C-f, чтобы открыть файл…

Оно прямо здесь, defun save-buffer (&optional arg) — прямо тут, ответ иллюстрирован: «киллер‑фича» Emacs — интроспекция и ужасная свобода, которую она даёт: сделай своим, сделай собой, почини, сломай, узнай, иди дальше и внутрь — и когда мы говорим «Да, конечно, оно так, конечно, магия — это набор инструментов для достижения внутреннего зрения/понимания, то есть самопознания», хочется, чтобы все эти термины резонировали друг с другом. Надежда на язык осмысления и самоконструирования: интроспективное наделение силой.

Мы же говорим просто о «свободном софте». Свобода как нахождение.

эксплицитность

Сейчас поговорим об эзотерической философии. Но сначала пожалуюсь на посудомойки.

В старину вы покупали, чёрт возьми, посудомоечную машину — и вместе с ней получали схемы. Если ломалась — можно было попробовать починить самому, и в бумагах была гарантирована сама принципиальная «познаваемость» того, что происходит внутри, если немного постараться, — плюс расширяемость или открытость к модификациям, если амбиции позволяют. Речь не только о том, что в приборе не было компьютера, а о том, что школьный труд (и папа) подготовили вас к тому, чтобы сунуть отвёртку во внутренности. Не менее важно: вы могли заменить детали сами, не нарушая священную Гарантию. Ожидалось, что машина будет мыть посуду, но вы были способны и обязаны понимать машину хотя бы в общих чертах. У вас был бы гаечный ключ, и вы знали бы, для чего он.

Мир в целом был устроен так. Теперь — нет, отчасти потому, что софт повсюду и он непостижим для нормального человека, отчасти потому, что корпоративные хищники знают: на подписках и сервисе они заработают больше, чем на готовых продуктах. (Нет смысла открывать Prius, чтобы «посмотреть двигатель»: это компьютер, обёрнутый машиной, и производитель физически ограничивает доступ к начинке, чтобы брать за Авторизованный сервис сколько захочет.)

В современном мире, где большинству потребителей и всем «молодым взрослым» комфортнее платить социопатам за ограниченный доступ к потоковой музыкальной библиотеке, чем владеть физическими носителями, и почти вся телекоммуникация происходит в «огороженных садах» корпораций — где «творческие инструменты» используются преимущественно для потребления (ремиксы, фанфик, «мемы»), а не для рискованных попыток новой самовыраженности — интерпасcивное потребление и ожидается, и всё чаще исключительно допускается. («Интерпассивность»: попросить DVR «посмотреть» телевизор за вас, чтобы вы могли больше работать, не боясь пропустить «свои» шоу.)

Когда нормисы хвалят технологию за то, что она «просто работает», они вкладывают в это не то, что инженеры. Для нетехнических людей «просто работает» — значит «позволяет продолжать не думать». Удачная потребительская техника должна впечатлять, а не наделять силой; часто достаточно произвести впечатление — и доверчиво‑некомпетентный решит, что «оно просто работает». Понимающие люди употребляют фразу иначе — чтобы похвалить надёжность, прочность, функциональность: «просто работает» — это когда можно рассчитывать на верный полёт в любую погоду, освобождая людей не для отдыха (будьте серьёзны!), а для другой работы.

Пожалуй, это ключевое различие: для одних ценна технология, позволяющая делать больше — эффективнее и результативнее; для других — технология, позволяющая делать меньше в абсолюте. (Мудрые люди16 ценят и то и другое, знают, когда что важно, и не путают бездействие с досугом.)

Сравните безобразный, но чудовищно мощный язык взаимодействия Emacs с запоминающимися «горячими клавишами» и жалко ограниченными возможностями обычного редактора. Сравните отлаженную плавность древнего дедовского перочинного ножа, как он выскальзывает взмахом кисти, — с неохотным ходом мультитула, купленного для продолжающегося «дед‑косплея», но используемого только, чтобы вскрывать коробки FedEx, да и тот вы чаще оставляете дома, потому что он портит чистую линию ваших дизайнерских «тактических» брюк… Это разница, соответственно, между функциональными инструментами и театральными реквизитами, между миром, который требует некоторого вложения энергии для плавного хода, но может стать красивым — магическим, — и миром, где жить легко на поверхности, но невозможно в долгую: платишь собой и корродируешь душу.

Инструменты, позволяющие делать работу сложнее и лучше, — благословение; инструменты, делающие жизнь легче, но хуже,17 — другое дело, даже если нас с детства учат ценить именно их.

Выбирая формы и инструменты, которые делают возможным «быть правым» за «цену» испачкаться, попыхтеть или столкнуться с невообразимым ужасом крутого порога вхождения, мы соглашаемся жить с тем, что ты «неправ», не в такт «обычному опыту» — и даже своему внутреннему Чувству того, как «должно быть», выведенному во внешний суперагент. «Настоящая работа» постоянно отстаивает неуютную, но напряжённо‑плодотворную двойственность, общую странной мысли и намеренной практике — чувство «в мире, но не вполне от мира». Это и есть участь художника. Пройти мимо лёгкого удовлетворения к глубокой полноте значит отвергнуть манию удобства в ядре нашей светской потребительской государственной религии — и принять, не без риска, альтернативную реальность вне консенсуса.

(Легко мне рассуждать, конечно, из нашей хорошей квартиры в благоразумном городе с электромобилем на собственной парковке.)

Наш разговор о верующих, ведущих «две книги», связан с этим чувством «принадлежности‑отчуждения»: молящийся должен жить с тем фактом, что есть существо, которое слушает и отвечает на его молитвы — а именно/только его же ум, — и потому невыносимые фикции и метафизические нелепицы организованной религии на земле неизбежно уступают место неортодоксальной индивидуальной практике — близким личным отношениям с внутренним «кем‑то», кого нет, но кто помогает нам в нужде — и потому подлинная жизнь верующего повсеместно — жизнь «удовлетворённой неудовлетворённости». Преднамеренная жизнь с/в открытых вопросах и неубранных парадоксах — вместо (продаваемых, но ложных) «удовлетворяющих ответов» — может привить иммунитет к некоторым тупым идеологическим нажимам, но это страшно, одиноко и бьёт по яйцам — хорошо хоть церкви дают социальные компенсации за ужас, через который их системы веры протаскивают адептов.

* Доступ к инструментам

Emacs — это ставка, которая не сыграла, на будущее, которому никогда не дадут случиться. Он воплощает обаятельную, но ошибочную веру, что создание инструментов, делающих людей свободнее, породит движение к свободе. Если бы его делали панки, а не хиппи — не учёные и инженеры, жившие в наивной меритократической надежде, — возможно, движение, которое он представляет, смогло бы требовать, а не напоминать.

Каждый раз, садясь за компьютер и открывая Emacs, я вхожу не в «будущее», а в исчезнувшее будущее исчезнувшего прошлого — и мне даётся доступ к непревзойдённой силе — и от этого у меня разрывается сердце.

* Имплицитность

Вам продают посудомойку или машину, или компьютерную программу — и цена того, что вам не придётся чинить это самому, когда сломается, в том, что чинить вам не позволено. «Защита», которую якобы даёт гарантия, — не для вас, а для компании: гарантия существует, чтобы её нарушать, как закон о наркотиках, ставя вас в положение нарушителя, что освобождает Их от каких‑либо обязательств вам помогать. Она производит лишь нарушения. Гарантия описывает их ответственность так, чтобы обычные разумные действия освобождали их от неё; потому их юристы так хорошо оплачиваются. Ваша работа — оставаться зависимым, и ваша награда — инфантильное «счастье». Ваша другая работа — молчать.

Один из ключевых догматов/симптомов метастатического капитализма: если вы не владелец бизнеса, вы не решаете, чему быть в мире — «создание» понимается как производство и принадлежит исключительно капиталу и его смотрителям/слугам; владельцы, инвесторы решают, что принадлежит. «Мейкерам» дозволено печатать на 3D‑принтере безделушки, подставки для ноутбука, крючочки для полотенца у плиты, неденоминационные подарки для воспитателей их детей в Монтессори и т. п. Им позволено быть дарителями; им запрещено менять или ставить под вопрос данное. Выйти за пределы этого буквально производимого консенсуса, «сойти с сети», — значит жить «неправильно»; один из худших проступков против консенсусного порядка — попытка расширить круг возможного, познаваемого, делаемого, не монетизируя это и не делая любые новшества/создания легитимными для капитала. Хороший гражданин «заложил бы чёрный ход». Вам уж точно не положено действовать свободно, т. е. аутентично, в анти‑творческом, хищно‑ассимиляторском порядке; порядок дан, разве не ясно? Им нужно, чтобы осмысленная автономия оставалась буквально немыслимой, и поэтому все по‑настоящему свободные переживания клеймятся (более или менее тонко) как — ну, возьмём репрезентативный набор — «медленные, корявые, древние, непостижимые, чрезмерно сложные, эргономически катастрофические и просто уродливые». Ещё: грязные, опасные, странные, бредовые, немодные, неутончённые, анархичные, проблемные, вредные…

А уродство — хуже всего: оно оскорбляет вкус Надзирающего Ока.

«Внешние» опыты вызывают неприятное напряжение — по объективно биологическим и по дурным, управленческим соображениям. Сила контрапозитивного мышления: Если ты достоин управлять собственной жизнью — ты был бы богат. Если ты способен думать сам, мы бы, конечно, дали тебе разрешение — а если ты справишься с ответственностью за эту машину, все уже будут знать, потому что мы им сказали. Ты там, где должен. Рядом.

Думать иначе — пасть жертвой бреда, гордыни, фантазии, «магического мышления». Это чудовищно, мерзко… как Ричард Столлман, скажем.18

Пока производственные процессы тщательно управляются и предсказуемы — ср. гипероптимизированный голливудский конвейер, который больше не способен выпускать ничего, кроме сиквелов, — именно неопределённость и неустойчивость творческих практик делает их воображательно плодородными; взрывной рост — взрывной, созидание — риск. «Тот опасный элемент»: страшная возможность стирания категорий, мир под ногами вдруг переворачивается, становится достаточно большим, чтобы нас съесть, зеркально‑изменчивым. Мы, обезьяны с инструментами, инстинктивно тянемся к опыту «вне категорий», неузнаваемому «ощущению во рту», тотальной странности — привычные дневные «я» сдуваются пеплом — но это и страшит: пройти сквозь сумерки внутрь/наружу в нечто (в другого нас), заново сотканное ночью. Tierce de picarde мультивселенский приличный инверс — ой оставьте, Джеймзи, лишь чуточка всевеселья. Всем нужен иногда визит к экзистенциальной опасности, но к ночи (рабочей, школьной) хочется защиты от такого тёмного искусства. Кто‑нибудь, заберите у меня ключи: мне нельзя доверять.

Ну… а есть люди, готовые сделать пребывание в двойном‑секретном промежутке своей работой — некоторым милее равновесие (equipoise), чем поза (poise). Готовые вкладывать труд в сам «магический труд», исследовать создание инструмента, а не только пользоваться им. В когнитивной сфере — скажем, серьёзная медитация, развитие памяти, нейропоп‑наркотики, если уж очень; взлом сознания. «Второй ум». (Считайте, я здесь напрашивался на очевидные параллели с Emacs и магической работой.) Ино: «касательные способы атаковать проблемы… во многих смыслах интереснее, чем прямой, лобовой подход». Звучит как куча работы, но вы же с нами не сделали Another Green World. (Если это читаешь ты, Брайан — стукни раз для «да»…)

Вместо инструмента, который сводит мир к управляемости, вообразите метаязык для описания и конструирования инструментов, целую платформу — подумайте о том, как Фил Хайн решает, с какой тульпой слиться сегодня и как добиться союза, не зная, что получится. В любом случае будет большим. Вы кидаете монетки в темноту, и если даже одна из тысячи вернётся, вы сделали первый шаг в больший мир.

Парень‑фермер сказал: «Знаешь, я и вправду кое‑что почувствовал. Я почти видел…» Давайте же, наведите к чёрту «категориальную ошибку»: оставайтесь непереводимыми, непродаваемыми. Свободны — свободны как слово, как радикальность, как в «Free your mind and your ass will follow», как в «Разве ты не видишь ничего, что хотел бы попробовать?» Прекрасное создание, которому не хватает только приличной категории.

Инструменты для интроспекции, а не телекоммуникации.

Говорят (кто?), что заклинания и молитвы не работают, но молитвы и заклинания — технологии интроспекции и психотропизма с социальным действием как побочным эффектом; конечно, они работают — они просто не творят чудес, да и ничего не творит, ладно уж. Не стоит требовать от магии мирского стандарта — или сравнивать нож с кузницей, а МКС — с тщательно курируемым дизайнерским «Приложением для Авторов».

Трансгрессивное напряжение — сущностно для творческого исследования и магической работы, это нервный задор копания под консенсусными категориями, зарывания слишком глубоко, чтобы быть «узнанным» — а современная потребительская антикультура отрезает эти ощущения «из благих побуждений». Могилёвы на вынос. Система19 оправдывает «оставаться на месте» в материальном нулевой суммы тем, что делает «междусть», временность и некрасивую автономию грехом, формой падения. «Выпасть из шага», не поспеть (ведь как можно отказаться?) за соседями Джонсами. Но вместо ритуальной сдачи чужой трусости вы можете говорить или self-insert-command свои слова силой; мы могли бы ковать «я», а не безделушки, выбирать гражданскую субъектность вместо потребительского довольства. Мы можем вести две книги — чтобы было что показать тем тревожным доброхотам, которые держат свои монетки «в безопасном месте» и не желают слышать про призраков, лиспы и «экстатхи стттранных синтттезов»…

* Двойственность

Базовая идея в программировании: «функция» или «подпрограмма» — набор инструкций, часть большей программы, которую может вызывать («звать») другой код — имеет возвращаемое значение, полезное вызывающему коду. В адресной книге может быть подпрограмма alphabetizeContacts(contactList), получающая список имён contactList на вход и возвращающая (выводящая, передающая) его же, но отсортированным, — вызывающему коду. Идея в том, что любая часть программы может вызвать эту функцию, зная, что ей передать и что получить; более того, внутренности alphabetizeContacts() можно менять, не ломая общий поток, если функция по‑прежнему ожидает список контактов и выдаёт отсортированный список. Среди прочего, когда функция возвращает значение, машина знает, что она перестала вносить изменения. Возврат — своего рода гарантия, контракт.

Помимо возвращаемого значения подпрограмма может иметь побочные эффекты — и это то, как звучит. Она может показать что‑то пользователю, увеличить счётчик — массу дополнительных действий, явных или нет. Отладка сложной программы часто означает трассировку и управление побочными эффектами, поддержание течения программы чистым и обозримым; искусный дизайн — это дисциплины инкапсуляции и абстракции, аккуратное управление «состоянием» — не только в бытовом смысле «что, по мнению пользователя, происходит?», но и в техническом «каково значение каждой переменной, что и где хранится в памяти?» «Состояние» — это отчёт о «внутримире» программы — надеемся, познаваемом, но возможно и нет.

Важнейшее: функции и программы часто пишутся так, что то, что они «на самом деле делают» (в бытовом смысле), — строго побочный эффект их формальной, определённой цели. Как именно информация попадает на разные экраны может быть неважно для внутренней логики — поэтому код отображения — отдельная забота, — но без него программа бесполезна для человека. Иными словами, «побочный эффект» — это деятельность, не схватываемая «идентичностью» создающего процесса, но при этом могущая быть центральной для его роли в мире.

Главное — не всегда главное.

К слову о главном: функция ~main()~ в программе на C — главный процесс по умолчанию, ограничивающий (так сказать) вселенную программы — возвращает целое число: вверх или вниз, теоретически — индикатор удачного прогона или второго варианта. Или число, или ничего. Некоторым людям захочется видеть в этом исчерпывающее описание всякой физической деятельности Вселенной; как только усвоишь идею «абсолютного нуля», температуры, при которой всё движение прекращается (-273.15° C, с поправками на эмпирику), в финальном ~return 0~, завершающем прогон, есть что‑то слегка жуткое…

(Правда, в вселенной C return 0 — хорошие новости; другие коды возврата — вероятные симптомы непотребства, как шаркающие шаги в тишине после Большого Схлопа…)

«Настоящая работа» употребляет термин «побочный эффект» именно так, потому что магия20 — это сплошь побочные эффекты. Один из наших стержневых тезисов: для индивидуальной и коллективной психической здравости нам нужно распознавать и пользоваться дистанцией между явными, «сознательными», именованными действиями и побочными эффектами — иногда прикрытыми фиктивной надстройкой — которые на деле составляют большую долю работы нашей жизни. Это альтернативная версия темы «двух книг» в «настоящей работе», указывающая на намеренную деятельность, невидимую даже для исполняющего её ума, потому что она нарушает структуру ожиданий этого ума. («Всякое видение — это видение‑как»; мы не видим того, чего не знаем.)

Подумайте, как молитва будто бы «проваливается», потому что никто, кроме нас, не слушает — нет возврата, так сказать; пустота — хотя смиренное признание и есть цель деятельности, её психологический источник ценности. Эта ценность трудна для стороннего наблюдателя, а «фиктивная надстройка» по имени «Бог» может скрывать эту психологическую работу и от самого молящегося; на самом деле так и лучше — иначе он мог бы не дойти до исповеди. Аналогично, развязка сюжета выглядит «результатом» или выплатой выдуманной машины‑функции, но её побочные эффекты — внутренние циклы напряжения и разрядки, последовательные и параллельные позы читателя: удивление, подчинение, суд, рассуждение, отождествление — вот реальная субстанция отношений читатель/фикция, а не «счастливый конец» как return 0 внизу горки.

Вот почему подло и глупо спойлерить финалы — другим или себе — вмешиваясь в непрерывный и намеренно выстроенный эмоциональный контур. Мы читаем, чтобы быть меньше истории, быть внутри, а не чтобы «получить и владеть» сведениями о сюжете — иначе нам и история не нужна, хватило бы синопсиса. Нужно сопротивляться соблазну обокрасть себя — не только в откровении, но и в догадке. Смирение наделяет силой.

Нам нужна рабочая психология магии и бессмыслицы.

Пользуясь инструментом вроде молитвы или Emacs, или медитацией, или (чтением) романа, пользователь (проситель, вопрошающий) прямо уделяет внимание доступному интерфейсу, внешней надстройке, в то время как глубинная работа идёт вне поля зрения. Вы открываете книгу, чтобы узнать, что будет дальше, но чтение, удивление, размышление трансформируют вас, переводят и расширяют; вы фокусируете внимание на дыхании, свечном пламени или мантре, чтобы сфокусировать внимание, — в то время как означивание распадается; вы просите Бога, а затем отвечаете сами; вы бродите через «интерактивную фикцию», решая лишь серию логических головоломок; вы заходите в универсальную программируемую среду и занимаетесь только редактированием текстов; и всё это время позади (или под) вами открыта дверь — вам осталось понять природу и ручку инструмента, заметить и назвать побочные эффекты, уловить невысказанную цель, шагнуть в лабиринт одинаковых извилистых проходов. «Играйте, чтобы узнать, что случится».21

Самопознание — инструмент выживания.

Первое, что надо узнать, — свою двойственность — свою множественность. Есть чтения попроще и редакторы подружелюбнее, но странный рост человеческой души зависит от пути. «Вера» — путь неопределённый, с неизмеримой целью. Чтобы умело идти миром, откажитесь от лёгких удовлетворений и следуйте со страшной, как во сне, строгостью. Идентифицируйте действующие фикции и работайте ими напрямую — почему нет? Воображаемые цели предполагают воображаемые средства.

Когда программа выполняется, вывод — рост и смерть, return 0; но происходит ещё кое‑что.

Emacs — «свободный софт» в том смысле, что он верит в возможность вашей свободы. Он хочет для вас этого хорошего; он воплощает этот дух. Не хватает только приличного редактора — хотя он здесь, чтобы помочь вам собрать свой — и меньшие справлялись.

И богов нет, так что на свои молитвы отвечаете вы сами, у вас нет выбора, и что бы ни отвечало вашим молитвам — это бог, а не наоборот. Это всегда был секрет, вопрос к конечному ответу: мы как боги, и нам бы стоило научиться — стать хорошими в этом.

M-x isearch-backward

Одна из причин, по которой практик «магии» фетишизирует старость как таковую: с прошлым сперва нужно согласиться — признать, что оно случилось. Выбора нет: оно реально и записано. История — это процессия невероятных (проклятых!) фактов, от которых не сбежать, — так что сиди с ними, даже с невероятным и кажущимся невозможным, один странный тезис за другим. И признавай, что оно не исчезает, когда ты отворачиваешься; след всегда остаётся. Прошлое — для жизни рядом, прежде всего в лице родителей, конечно. Огромно, как горы, — зачем пытаться сдвигать. Мыслить магию как невозвратное прошлое «только для чтения» — это прагматически настраивает нас принимать его на его условиях — если только мы не мудаки… Один враг — презентизм, то бишь «протагонизм», а побочный эффект покупки тусклого мифа о «Золотом веке» — подцепиться к нашим нарративным аппаратам, подготовить нас к принятию — то есть вы обязаны — дабы умело обратиться к настоящему, которое нас занимает. К основной линии. По прошлому можно писать поверх — оно впитывает. Фактически оно утрачено нам, но по‑прежнему присутствует как история; дистанция делает невозможное правдоподобным как фиктивная надстройка.

Прошлое — парадокс, лабиринт и логово, руина, обнажающая, реальное, но нереалистичное, регресс‑процессия уроков.

Emacs сегодня тяжело обретать новую аудиторию; теперь труднее, чем раньше, начать «неправильно». Но он приходит к нам из прошлого на своих условиях, старше и страннее жизни. Сделанного не воротишь. Большинство оставит его — как кошмар, от которого они пытаются очнуться, — но некоторые берут и находят. «Приобретённый вкус».

Вы не поймёте, пока не начнёте пользоваться; вы не увидите, пока не поверите. Магический круг должен замкнуться вокруг действия, а вера — сделать момент из времени; прошлость делает эту трансформацию возможной, как и фикция, — их воображаемые контракты превращают декорации сцены в древне/альтернативные где‑когда. Мы используем прошлое, чтобы переосмыслить своё действие как «возврат/открытие», и двигаться дальше с чуть меньшей импотентной самосознательностью о «Где» и «Как». (Или можно мифологизировать сами «Где» и «Как», сделать technē фокусом; научный метод тоже требует веры — разумной.) Былое — просто есть, и это хороший старт.

Говорят, «нет Emacs — есть только ваш Emacs».

|«Your Glorantha Will Vary» (HeroQuest Glorantha, стр. 4, 114, 130,
|144, 221 и 222)

Я про то, что у времени есть вес. Приход в странные старые текстомиры именно сейчас — особый опыт; чувство руины и восстановления несёт сложный заряд, специфичный для «большой/малой» разницы десятилетий — между их «там‑тогда» и нашим «здесь‑сейчас»; эта дистанция даёт нам некоторую безответственность, свободу читать и бежать — что может оказаться чёрным ходом к настоящей ответственности. Побочные эффекты, боковые истории, косые стратегии. Отстранение превращает вовлечение и мааaybe подталкивает действовать с верой («альтернатива — страх»), привыкать двигаться по незнакомым пространствам и формам, новым странным углам себя.

Есть что сказать в пользу старых способов, старых миров, мод, стариков; к лучшему или худшему мы устроены относиться к ним иначе. Дай дорогу и поддержи дверь. Есть эволюционная причина у «Жили‑были» — что‑то про тактику фиктивного убеждения и направленность стрелы времени, пользу данности. Вы не поймёте, пока не возьмётесь: нас заряжает то, что мы ищем и находим, и работа, которую мы вкладываем в миротворчество — копание, — в свою очередь конституирует наши отношения с многими нашими мирами. Отсюда травматическая сцепка и «а можно я расскажу про своего персонажа», и тот первый роман, который вы никогда не закончите, и странная живучесть текста против пронзительности изображения, прошедшего светом из прошлого: смысл меняется от того, как мы его делаем, от воображаемых метаданных, которыми сопровождаем. Эти побочные эффекты. Отсюда и разница (см.) между укоренённой «уверенностью» и воздушной «определённостью». Первая приходит от работы с информацией — ощупью, «через пальцы», — от вывертывания наружу и внутрь; вторая — уклонение. Невесомость. Быть «определённым» можно только насчёт инструмента, который ещё не взял в руки — как сказал Эмпсон: «…один лишь предохранительный клапан / Знает худшую правду про двигатель; только ребёнок / Ещё не введён в заблуждение».

(Санта‑Клаус — развивающий инструмент.)

Уверенность рождается от проверки; мир, как любовь, нужно делать. Умонастрой создателя инструмента отличается от настроя пользователя, и тем более от потребителя; первые двое могут встретиться внутри изгиба и зерна вещи и действия — в общем термине «создания и владения», — но те, кто псевдосвязывается лишь через посредство Доллара, навсегда отрезаны от истины, открытой лишь тем, кто берёт рукоять и защёлкивает защёлку. Идентичность «потребителя» отрезает истинное знание — в этом её дело. «Деньги» среди прочего именно для этого: обезличить обязательство в долг без отношения.

Я не должен «тебе» — я «должен деньги».

Воображаемое со‑творение текстомира: нет Emacs, кроме вашего; нет Nomic или Viriconium вне понятия (ваше будет отличаться), но есть вот это — игра, чтобы узнать. Этот лабиринт — не «хобби», а «образ жизни» — вернее, какая‑то нестильная жизнь под неверным словом: медленно поворот от накопления к интеграции, как от земной арканы к внутренней и космической. Вы отвечаете на свои молитвы — то есть есть вселенная, где Бог существует, и это вы; купленное может быть приятно, но верное — найдено; его надо выкапывать, и всякая яма, которую вы не перестаёте копать, — это ход. «И кровь его — на вкус как моя?» Если у вас Harley, вы можете вступить в клуб, но это не должен быть «заводской» Harley — доказательство подлинности — в действии, даже в действии «инаковости». Ваши привязки клавиш будут варьироваться, потому что варьируетесь вы. Вы выбираете существительные и глаголы: когда мы говорим словами хозяина, мы думаем—

Нам стоит быть более скептичными к мирам, которые создаём, и более доверчивыми — вопреки рациональности — ради миров (внутренних и иных), которым ещё быть созданными. Нам стоит умнеть, чтобы не оптимизировать преждевременно ради порядка, когда вся‑вся стрела времени указывает внутрь и вниз — к абсолютному return 0. Слова мудрости, пусть будет так: ваш мир — прекрасный поток сознания, которому недостаёт лишь приличного редактора.

|И я тоже, … когда подозреваю, что облажался по полной, остро ищу
|уединения. Неправильный сейчас час… Мы, кто станет объектом Его гнева,
|должны держаться рядом и говорить напрямик. Альтернатива — бегство.
|Влечёт? … Мы не из таких, и в этом, может быть, больше жалости. (Дэвид
|Милч, Deadwood 3×06, «A Rich Find»)

[fn:1] Оставаясь в «чистом тексте» с лёгкой разметкой, вы можете собрать модульный издательский конвейер в юникс‑стиле — надёжные маленькие части, свободно соединённые. Этот проект использовал файлы multimarkdown под управлением git (и GitLab), pandoc для веб‑верстки выдержек и быстрого «чернового принта», LaTeX и бесценный класс memoir для красивой печатной вёрстки, а также набор мелких shell‑скриптов для нормализации и организации данных. Альтернатива здравым текстовым рабочим процессам — привязаться к MS Word или Scrivener (лол) и стараться не думать об интеропе, экспорте данных или зависимостях от платформы. Как ясно из горечи некоторых мест этой главы, я — бывший пользователь бутик‑редакторов вроде iA Writer, OmmWriter и Ulysses. Счастливо — бывший.


[fn:2] Возможно, я просто уже «слишком стар для этого дерьма», но вернитесь ко мне через пять лет, когда я помолодею. И да, Emacs переосмысляет большую часть vim как альтернативную модель взаимодействия в ~evil‑mode~, чего более чем достаточно, чтобы не‑маги воспринимали его как слегка более медленный «vim плюс плюшки», чьи странности компенсируются доступом ко всей вселенной Emacs. Настолько Emacs суров.

[fn:3] В земле Emacs вы бы записали это как ~C‑c C‑a f~ и ~C‑x C‑f~, так как раскладка чувствительна к регистру, т. е. f≠F. Будучи вменяемым взрослым, я теперь нахожу регистронепрозрачность «Ctrl‑F значит “Find”» слегка оскорбительной. Имейте в виду, это только клавиши «по умолчанию»; ваши привязки могут отличаться — хотя, обнаружив их стройную и последовательную логику, вы, возможно, и не захотите их менять.

[fn:4] Emacs и Vim действительно разрабатывались на/для клавиатур из других вселенных.[fn:4]

[fn:5] Я преувеличиваю трудность. Наберите M-x и начало имени команды — и ваша система дополнения покажет список годных вариантов; начните последовательность клавиш — и ~which‑key~ выведет «шпаргалку» для составных шорткатов и аккордов. И, разумеется, инкрементальный поиск можно сделать «замкнутым», или просто заменить на отличный пакет ~swiper~. Раздражает «сталить» эти претензии к Emacs, потому что по сути есть только две внятные: «я не хочу тратить время, чтобы дойти до порога окупаемости» и «начальник заставляет меня сидеть в VS Code».

[fn:6] Путаница строится на недопонимании термина «буфер» (buffer), что я здесь разбирать не буду, но с чем даже новичкам Emacs придётся ознакомиться.

[fn:7] Под Lisp лежит C‑код, обслуживающий базовые действия на высокой скорости, но заинтересованный пользователь может изменить почти любой пользовательский аспект Emacs изнутри программы. Бесстрашные спелеологи могут поковыряться и в исходниках, которые, разумеется, разрабатываются открыто.

[fn:8] M- здесь обозначает модификатор meta, которого больше нет на клавиатурах; обычно его вешают на Windows‑клавишу или «открытое яблоко» (Cmd), но мне по душе Option — под среднем пальцем на домашнем ряду. Есть ещё «super» — я вызываю его, произнося кровожуткие ритуальные формулы и шлёпая себя по лицу.

[fn:9] «Мы как боги и нам бы стоило научиться — стать в этом хорошими. Пока что удалённые пути власти и славы — будь то правительство, крупный бизнес, формальное образование, церковь — преуспели настолько, что грубые дефекты заслоняют реальные достижения. В ответ на эту дилемму и на эти достижения развивается сфера интимной, личной силы — сила индивида вести собственное обучение, находить собственное вдохновение, формировать собственную среду и делиться своим приключением с каждым, кому это интересно. Инструменты, помогающие этому процессу, разыскиваются и продвигаются WHOLE EARTH CATALOG.» (Заявление о цели Стюарта Брэнда) ↩

[fn:10] Глава 25 руководства Emacs называется «Команды для человеческих языков», которые с точки зрения машины, понятно, считаются второсортными. ↩

[fn:11] Да, глупая аллюзия на Деррида в эссе о текстовом редакторе. И да, я помню, что это каламбур/двусмысленность, и что странно обесценивающие пост‑hoc оговорки Деррида о двусмысленностях его собственной прозы не стоит принимать за чистую монету — ровно как и саму прозу. Он извлёк огромную пользу из того, что его читали одновременно как игривого философа‑каламбуриста и «неправильно понятого» говорящего‑правду в затяжной партизанской войне против якобы тирании дуалистической метафизики. Время жалоб! Помню непреднамеренную комедию, как Гаятри Спивак в Нью‑Йорке прочла длинный доклад о том, что никакое предписательное описание деконструкции «по Деррида» не схватит её сложность и тонкость, но вот вам номерованный список тропов практики деконструкции, чисто ради шутки среди друзей, ха‑ха и т. д., — а потом встаёт Деррида и говорит: «Нет, вообще‑то это почти оно». Я читал и слышал массу чепухи в годы Теории, но это был или пик, или дно — смотря какой у вас день. ↩

[fn:12] В исключающе‑эзотерическом жаргоне «GNS»‑теории игрового процесса Рона Эдвардса можно сказать, что наше «системное воображаемое» отражает симуляционистскую или «системо‑исследовательскую» повестку. ↩

[fn:13] Да‑да, я знаю, что это не его имя, и знаю, что бестселлерный американский «Руми» — это по сути демиелинизированная версия Коулмана Баркса, да‑да. ↩

[fn:14] В психоделической классике Моррисона/Куайтли All‑Star Superman Супермен побеждает буйствующего Лекса Льютора, дав ему то, чего он всегда хотел, — силы бога. Лютор видит всё, везде и сразу — и парализуется откровением: «Вот так он видит всё время. Каждый день. Будто тут только мы, внутри, вместе. И у нас только мы и есть». Способности Лютора рассеиваются, час сюжета истёк, и в своём мелочном мильтоновско‑сатанинском нарциссизме он визжит на всемогущего пришельца: «Я мог спасти мир, если бы не ты!!» Кларк бьёт его. «Ты мог спасти мир много лет назад, если бы это имело для тебя значение, Лютор». Вот граница — и бремя всемогущества. ↩

[fn:15] Наша терминология намеренно отсылает к «General Theory of Love», где «любовь» понимается как набор протоколов коммуникации, обеспечивающих эмоциональное содействие совместному развитию посредством лимбического резонанса (делёж), лимбической регуляции (стабилизация) и лимбической ревизии (обучение). Эта книга даёт объединённое понимание «любви», связывающее интимный физиологический процесс регулировки сердцебиения у младенцев с «действием на расстоянии» — сонетом, т. е. я буквально идеальная её целевая аудитория, и я в большом долгу перед её авторами Льюисом, Амини и Лэнноном, который «настоящая работа» пытается выплатить. 

[fn:16] Я думал о моём дорогом друге Джереми, пока писал это — парне, которому иногда трудно расслабиться, но который знает и ценность, и удовольствие этого, и старается делать мир таким, чтобы другим было безопасно и возможно выдохнуть и жить. Джереми — хороший человек. 

[fn:17] (подумайте о героине, «знакомствах онлайн», потоковом видео, Uber, AirBnB и Twitter, затем (эх, почему бы и нет) подумайте о дерегуляции, массовой слежке, ИИ‑искусстве, инфляции оценок и «снижении вреда».) 

[fn:18] (РМС и правда мерзковат, как подтвердят те, кто его у себя принимал во время конференций и выступлений, — но не из‑за своих философских убеждений.)
    
[fn:19] Даже спустя все эти годы мне приятно насмешливо говорить «Система» или подтрунивать над «продажными». Поколение X рулит! 

[fn:20] Ключевой тезис «настоящей работы» — что термин «магия» подходит к большинству человеческого опыта — даже к вашему.

[fn:21] Эта строка — из раздела советов ведущему (MC) в ролевой игре Винсента Бейкера /Apocalypse World/ — лучшего в своём роде примера. «Играй, чтобы узнать, что будет» звучит очевидно, но в одержимом «миростроением» мире настолок (и особенно в тревожном, беспомощном микромире «сторигеймов») это — развязывающее заклинание. В «игрокнижке» MC у Бейкера есть и такие же мудрые бейзлайны для мастера любой ролевки: «Смотри через прицел… Задавай провокационные вопросы и стройся на ответах». И лучшая: «Отвечай подлянками и нерегулярными наградами».

